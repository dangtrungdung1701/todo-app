{"version":3,"sources":["Redux/Actions.js","Components/Header.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","Redux/States.js","Redux/Store.js","Redux/Reducer.js","index.js"],"names":["ADD_TODOS","DELETE_TODOS","CHECK_TODOS","UPDATE_TODOS","addTodo","todo","type","payload","updateTodo","Header","useState","error","setError","setTodo","dispatch","useSelector","state","useDispatch","className","onChange","e","target","value","placeholder","onKeyUp","key","actions","id","Date","now","title","isDone","setTimeout","onClick","Todo","props","todoEl","useRef","setValue","useEffect","ref","checked","todoId","preventDefault","onBlur","current","classList","add","TodoList","todos","reserveTodos","slice","reverse","console","log","length","map","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Store","createStore","action","newState","push","filter","result","index","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.f6bc7b66.chunk.js","sourcesContent":["export const ADD_TODOS = \"ADD_TODOS\";\r\nexport const DELETE_TODOS = \"DELETE_TODOS\";\r\nexport const CHECK_TODOS = \"CHECK_TODOS\";\r\nexport const UPDATE_TODOS = \"UPDATE_TODOS\";\r\n\r\nexport const addTodo = (todo) => {\r\n  return {\r\n    type: ADD_TODOS,\r\n    payload: todo,\r\n  };\r\n};\r\nexport const deleteTodo = (todoId) => {\r\n  return {\r\n    type: DELETE_TODOS,\r\n    payload: todoId,\r\n  };\r\n};\r\nexport const checkTodo = (todoId) => {\r\n  return {\r\n    type: CHECK_TODOS,\r\n    payload: todoId,\r\n  };\r\n};\r\nexport const updateTodo = (todo) => {\r\n  return {\r\n    type: UPDATE_TODOS,\r\n    payload: todo,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../Redux/Actions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Style/Header.css\";\r\nimport { BottomNavigation } from \"@material-ui/core\";\r\n\r\nfunction Header() {\r\n  const [error, setError] = useState(false);\r\n  const [todo, setTodo] = useState(\"\");\r\n  const todos = useSelector((state) => state);\r\n  const handleOnChange = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n  const handleAddTodo = () => {\r\n    if (todo) {\r\n      dispatch(\r\n        actions.addTodo({\r\n          id: Date.now(),\r\n          title: todo,\r\n          isDone: false,\r\n        })\r\n      );\r\n      setTodo(\"\");\r\n    } else {\r\n      setError(true);\r\n      setTimeout(() => {\r\n        setError(false);\r\n      }, 800);\r\n    }\r\n  };\r\n  const handleEnterAddTodo = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (todo) {\r\n        dispatch(\r\n          actions.addTodo({\r\n            id: Date.now(),\r\n            title: todo,\r\n            isDone: false,\r\n          })\r\n        );\r\n        setTodo(\"\");\r\n      } else {\r\n        setError(true);\r\n        setTimeout(() => {\r\n          setError(false);\r\n        }, 800);\r\n      }\r\n    }\r\n  };\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"header-container\">\r\n      <h1>Todos</h1>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleOnChange}\r\n          value={todo}\r\n          placeholder=\"What do you wanna do ? my friend üöÄ\"\r\n          onKeyUp={handleEnterAddTodo}\r\n        />\r\n        {error ? (\r\n          <button className=\"error-button\">‚ö†Ô∏è</button>\r\n        ) : (\r\n          <button onClick={handleAddTodo} className=\"add-button\">\r\n            ‚ûï\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Style/Todo.css\";\r\nimport * as actions from \"../Redux/Actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Todo(props) {\r\n  const todoEl = useRef(null);\r\n  const [value, setValue] = useState(props.todo.title);\r\n  useEffect(() => {\r\n    setValue(props.todo.title);\r\n  }, [props.todo.title]);\r\n  const dispatch = useDispatch();\r\n  const handleDeleteTodo = () => {\r\n    todoEl.current.classList.add(\"remove\");\r\n    setTimeout(() => {\r\n      dispatch(actions.deleteTodo(props.todo.id));\r\n    }, 400);\r\n  };\r\n  const handleCheckTodo = () => {\r\n    dispatch(actions.checkTodo(props.todo.id));\r\n  };\r\n  const handleEditTodo = (e) => {\r\n    e.preventDefault();\r\n    setValue(e.target.value);\r\n  };\r\n  const handleUpdateTodo = () => {\r\n    if (value !== props.todo.title) {\r\n      dispatch(\r\n        actions.updateTodo({\r\n          ...props.todo,\r\n          title: value,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleUpdateTodoByEnter = (e) => {\r\n    // console.log(e);\r\n    if (e.key === \"Enter\") {\r\n      if (value !== props.todo.title) {\r\n        dispatch(\r\n          actions.updateTodo({\r\n            ...props.todo,\r\n            title: value,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"todo-container\" ref={todoEl}>\r\n      <input\r\n        className=\"checkbox\"\r\n        type=\"checkbox\"\r\n        checked={props.todo.isDone}\r\n        onClick={handleCheckTodo}\r\n      />\r\n      {/* <p className=\"labelTodo\">{props.todo.id}</p> */}\r\n      {/* <label htmlFor={props.todo.title} className=\"labelTodo\">\r\n        {props.todo.id}\r\n      </label> */}\r\n      <input\r\n        className=\"text\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={handleEditTodo}\r\n        onBlur={handleUpdateTodo}\r\n        onKeyUp={handleUpdateTodoByEnter}\r\n      />\r\n      <button onClick={handleDeleteTodo}>üóëÔ∏è</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport \"./Style/TodoList.css\";\r\nimport { useSelector } from \"react-redux\";\r\nfunction TodoList() {\r\n  let todos = useSelector((state) => state);\r\n  const handleClickBell = (e) => {\r\n    e.target.classList.add(\"ring\");\r\n    console.log(e.target.classList);\r\n    setTimeout(() => {\r\n      e.target.classList.remove(\"ring\");\r\n      console.log(e.target.classList);\r\n    }, 800);\r\n  };\r\n  const reserveTodos = todos.slice(0).reverse();\r\n  console.log(reserveTodos);\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      {todos.length > 0 ? (\r\n        <ul>\r\n          {todos\r\n            .slice(0)\r\n            .reverse()\r\n            .map((todo) => (\r\n              <Todo key={todo.id} todo={todo} />\r\n            ))}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"todo-list-empty-container\">\r\n          <h1 className=\"bell-icon\" onClick={handleClickBell}>\r\n            üõéÔ∏è\r\n          </h1>\r\n          <h1>Todo list is empty</h1>\r\n          <h2>Let's do something right now!!!</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport TodoList from \"./Components/TodoList\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <Header></Header>\n        <TodoList></TodoList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [];\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./Reducer\";\r\n\r\nexport const Store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import { todos } from \"./States\";\r\nimport * as actions from \"./Actions\";\r\n\r\nexport const reducer = (state = todos, action) => {\r\n  let newState = [];\r\n  switch (action.type) {\r\n    case actions.ADD_TODOS: {\r\n      newState = [...state];\r\n      newState.push(action.payload);\r\n      return newState;\r\n    }\r\n    case actions.DELETE_TODOS: {\r\n      newState = [...state];\r\n      newState = newState.filter((todo) => todo.id !== action.payload);\r\n      return newState;\r\n    }\r\n    case actions.CHECK_TODOS: {\r\n      newState = [...state];\r\n      newState.map((todo) => {\r\n        todo.id === action.payload\r\n          ? (todo.isDone = !todo.isDone)\r\n          : (todo.isDone = todo.isDone);\r\n      });\r\n      return newState;\r\n    }\r\n    case actions.UPDATE_TODOS: {\r\n      let result = -1;\r\n      newState = [...state];\r\n      newState.map((todo, index) => {\r\n        todo.id === action.payload.id ? (result = index) : (result = result);\r\n      });\r\n      newState[result] = action.payload;\r\n      return newState;\r\n    }\r\n  }\r\n  return state;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { Store } from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}